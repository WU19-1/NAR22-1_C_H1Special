100
GA searches for better solutions by genetic operations, 
including selection operation, crossover operation and 
mutation operation. 
A. Selection Operation 
Selection operation is to select elitist individuals as parents in 
current population, which can generate offspring. Fitness 
values are used as criteria to judge whether individuals are 
elitist. There are many methods how to select the best 
chromosomes, for example roulette wheel selection, Boltzman 
selection, tournament selection, rank selection, steady-state 
selection, elitism selection and some others. Some of them 
will be described shortly. 
1) Roulette Wheel Selection 
Parents are selected according to their fitness. The better the 
chromosomes are, the more chances to be selected they have. 
Imagine a roulette wheel where are placed all chromosomes 
in the population, every has its place big accordingly to its 
fitness function like on the Figure 2. Chromosome with 
bigger fitness will be selected more times. 
Figure 2. Roulette Wheel Selection 
2) Rank Selection 
 The previous selection method will have problems 
when the fitness’s differ very much. For example, if the best 
chromosome fitness is 90% of the entire roulette wheel, then 
the other chromosomes will have very few chances to be 
selected. Rank selection first sorts the population by fitness 
and then every chromosome receives fitness from this ranking. 
The worst will have fitness 1, second worst 2 etc. and the best 
will have fitness N (number of chromosomes in population). 
After this, all the chromosomes have a chance to be selected. 
The probability that a chromosome will be selected is then 
proportional to its rank in this sorted list, rather than its fitness. 
But this method can lead to slower convergence, because the 
best chromosomes do not differ so much from other ones. 
3) Elitism Selection 
 When creating new population by crossover and 
mutation; we have a big chance, that we will lose the best 
chromosome. Elitism is name of method, which first copies 
the best chromosome (or a few best chromosomes) to new 
population. The rest is done in classical way. Elitism can very 
rapidly increase performance of GA, because it prevents 
losing the best found solution. 
B. Crossover Operations 
The generation of successors in a GA is determined by a 
set of operators that recombine and mutate selected members 
of the current population. The two most common operators 
are crossover and mutation. The crossover operator produces 
two new offspring from two parent strings, by copying 
selected bits from each parent. The bit at position i in each 
offspring is copied from the bit at position i in one of the two 
parents. The choice of which parent contributes the bit for 
position i is determined by an additional string called the 
crossover mask. Figure 3.10 below illustrates crossover 
operator briefly. There are three types of crossover operators, 
namely as single-point, two-point and uniform crossover. 
1) Single-Point Crossover 
 In the single-point crossover, the crossover mask is 
always constructed so that it begins with a string containing n 
contiguous 1s, followed by the necessary number of 0s to 
complete the string. This results in offspring in which the first 
n bits are contributed by one parent and the remaining bits by 
the second parent. Each time the single-point crossover 
operator is applied, the crossover point n is chosen at random, 
and the crossover mask is then created and applied. To 
illustrate, consider the single-point crossover operator at the 
top of the figure and consider the topmost of the two offspring 
in this case. This offspring takes its first five bits from the 
first parent and its remaining six bits from the second parent, 
because the crossover mask 11111000000 specifies these 
choices for each of the bit positions. The second offspring 
uses the same crossover mask, but switches the roles of the 
 International Journal of Computer Sciences and Engineering Vol.-4(10), Oct 2016, E-ISSN: 2347-2693
 © 2016, IJCSE All Rights Reserved 141
two parents. Therefore, it contains the bits that were not used 
by the first offspring. 
2) Two-Point Crossover 
 In two-point crossover, offspring are created by 
substituting intermediate segments of one parent into the 
middle of the second parent string. Put another way, the 
crossover mask is a string beginning with n0 zeros, followed 
by a contiguous string of nl ones, followed by the necessary 
number of zeros to complete the string. Each time the twopoint crossover operator is applied, a mask is generated by 
randomly choosing the integers n0 and nl. For instance, in the 
example shown in Figure 3.10 the offspring are created using 
a mask for which n0= 2 and nl = 5. Again, the two offspring 
are created by switching the roles played by the two parents. 
3) Uniform Crossover 
 Uniform crossover combines bits sampled uniformly 
from the two parents, as illustrated in Figure 3. In this case the 
crossover mask is generated as a random bit string with each 
bit chosen at random and independent of the others. 
Figure 3. Crossover and Mutation Operations
C. Mutation Operations 
In addition to recombination operators that produce
offspring by combining parts of two parents, a second type of 
operator produces offspring from a single parent. In 
particular, the mutation operator produces small random 
changes to the bit string by choosing a single bit at random, 
then changing its value. Mutation is often performed after 
crossover as in Figure 3.
